# Copyright 2021 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.data
import trax.layers
import trax.models
import trax.optimizers
import trax.supervised.trainer_lib

# macros
vanilla_attn_type = @trax.layers.SelfAttention

# Parameters for batcher:
# ==============================================================================
batcher.data_streams = @data.data_streams
batcher.batch_size_per_device = 8
batcher.eval_batch_size = 8
batcher.max_eval_length = 3072  # 32 * 32 * 3
batcher.variable_shapes = False

# Parameters for data_streams:
# ==============================================================================
data_streams.data_dir = None
data_streams.dataset_name = 'cifar10'
data_streams.input_name = 'image'
data_streams.target_name = 'image'
data_streams.bare_preprocess_fn = \
    @data.downsampled_imagenet_flatten_zcurve_preprocess

# Parameters for multifactor:
# ==============================================================================
# 0.0442 ~= 512^-0.5 = d_model^-0.5
multifactor.constant = 0.01
multifactor.factors =  'constant * rsqrt_normalized_decay'
multifactor.warmup_steps = 10000

# Parameters for Adafactor:
# ==============================================================================
Adafactor.learning_rate=0.1
Adafactor.factored=True
Adafactor.multiply_by_parameter_scale=True
Adafactor.do_clipping=True
Adafactor.do_momentum=True
Adafactor.momentum_in_bfloat16=False
Adafactor.beta1=0.9
Adafactor.decay_rate=1.0
Adafactor.clipping_threshold=1.0
Adafactor.weight_decay_rate=0
Adafactor.weight_decay_n_steps=0
Adafactor.epsilon1=1e-16
Adafactor.epsilon2=1e-3

# Parameters for train:
# ==============================================================================
train.eval_frequency = 2000
train.eval_steps = 625

train.model = @trax.models.RelformerLM
train.optimizer = @trax.optimizers.Adafactor
train.steps = 200000
train.checkpoints_at = []

# Parameters for RelformerLM:
# ==============================================================================
RelformerLM.d_model = 512
RelformerLM.d_ff = 2048
RelformerLM.vanilla_layers=(1, 1)
RelformerLM.n_funnel_blocks=(4, 6)
RelformerLM.shorten_factors=(3, 4)
RelformerLM.dropout = 0.0
RelformerLM.mode = 'train'
RelformerLM.n_heads = 8
RelformerLM.vocab_size = 256
RelformerLM.vanilla_attn_type = %vanilla_attn_type
RelformerLM.downsampling_fn = @LinearPooling
RelformerLM.upsampling_fn = @LinearUpsampling

# Parameters for SelfAttention:
# ==============================================================================
layers.SelfAttention.chunk_len = 128
layers.SelfAttention.n_chunks_after = 0
layers.SelfAttention.n_chunks_before = 1

# Parameters for TransformerLM:
# ==============================================================================
TransformerLM.d_model = 512
TransformerLM.d_ff = 2048
TransformerLM.dropout = 0.0
TransformerLM.max_len = 2048
TransformerLM.mode = 'train'
TransformerLM.n_heads = 8
TransformerLM.n_layers = 12
TransformerLM.vocab_size = 256
